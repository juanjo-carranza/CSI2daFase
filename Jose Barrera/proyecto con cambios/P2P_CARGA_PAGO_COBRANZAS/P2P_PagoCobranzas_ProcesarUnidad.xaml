<Activity mc:Ignorable="sap sap2010 sads" x:Class="P2P_PagoCobranzas_Configs"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:uou="clr-namespace:UiPath.OrchestratorClient.Utilities;assembly=UiPath.System.Activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Solicitud" Type="InArgument(sd:DataRow)" />
    <x:Property Name="Str_path" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>P2P_PagoCobranzas_Configs_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.OrchestratorClient.Utilities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Loop archivo de registro" sap2010:WorkflowViewState.IdRef="Sequence_31">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataRow[]" Name="unidadesValidas" />
      <Variable x:TypeArguments="sd:DataTable" Name="DT_Config" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="ListaColas" />
      <Variable x:TypeArguments="x:Double" Name="int_Reintentos" />
      <Variable x:TypeArguments="x:String" Name="CommentReg" />
      <Variable x:TypeArguments="sd:DataRow" Name="Currentrow" />
    </Sequence.Variables>
    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Leer archivo de registro" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_5" WorkbookPath="[Str_path &amp; &quot;Registro_P2P_Pago_Cobranzas.xlsx&quot;]">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Flowchart DisplayName="P2P_PagoCobranzas_Configs" sap2010:WorkflowViewState.IdRef="Flowchart_3">
            <Flowchart.Variables>
              <Variable x:TypeArguments="x:String" Name="StatusReg" />
              <Variable x:TypeArguments="x:String" Name="Str_Cola" />
              <Variable x:TypeArguments="uou:Credential" Name="C_FTPCredentials" />
              <Variable x:TypeArguments="x:String" Name="Str_ConfigGeneral" />
            </Flowchart.Variables>
            <Flowchart.StartNode>
              <FlowStep x:Name="__ReferenceID7" sap2010:WorkflowViewState.IdRef="FlowStep_3">
                <TryCatch DisplayName="TC - Procesar Unidad" sap2010:WorkflowViewState.IdRef="TryCatch_6">
                  <TryCatch.Variables>
                    <Variable x:TypeArguments="x:String" Name="Str_Conexion" />
                    <Variable x:TypeArguments="scg:List(x:String)" Name="ListaCorreos" />
                    <Variable x:TypeArguments="sd:DataTable" Name="DT_TablaMacro" />
                    <Variable x:TypeArguments="x:String" Name="TablaMacro" />
                  </TryCatch.Variables>
                  <TryCatch.Try>
                    <Flowchart DisplayName="Proceso General" sap2010:WorkflowViewState.IdRef="Flowchart_4">
                      <Flowchart.StartNode>
                        <FlowStep x:Name="__ReferenceID4" sap2010:WorkflowViewState.IdRef="FlowStep_12">
                          <Sequence DisplayName="Leer Configs" sap2010:WorkflowViewState.IdRef="Sequence_51">
                            <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Leer Config Individual" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_7" Visible="False" WorkbookPath="[Str_path &amp;&quot;Config\&quot; &amp; &quot;Config_P2P_Pago_Cobranzas.xlsx&quot;]">
                              <ui:ExcelApplicationScope.Body>
                                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_58">
                                    <ui:ExcelReadRange AddHeaders="True" DataTable="[DT_Config]" DisplayName="Read Range" sap2010:WorkflowViewState.IdRef="ExcelReadRange_9" SheetName="Conexiones">
                                      <ui:ExcelReadRange.Range>
                                        <InArgument x:TypeArguments="x:String">
                                          <Literal x:TypeArguments="x:String" Value="" />
                                        </InArgument>
                                      </ui:ExcelReadRange.Range>
                                    </ui:ExcelReadRange>
                                    <ui:ExcelReadCell Cell="A2" DisplayName="Read Reintentos" sap2010:WorkflowViewState.IdRef="ExcelReadCell_1" SheetName="Informacion">
                                      <ui:ExcelReadCell.Result>
                                        <OutArgument x:TypeArguments="x:Double">[int_Reintentos]</OutArgument>
                                      </ui:ExcelReadCell.Result>
                                    </ui:ExcelReadCell>
                                    <ui:ExcelReadCell Cell="B2" DisplayName="Read Ruta Config General" sap2010:WorkflowViewState.IdRef="ExcelReadCell_2" SheetName="Informacion">
                                      <ui:ExcelReadCell.Result>
                                        <OutArgument x:TypeArguments="x:String">[Str_ConfigGeneral]</OutArgument>
                                      </ui:ExcelReadCell.Result>
                                    </ui:ExcelReadCell>
                                  </Sequence>
                                </ActivityAction>
                              </ui:ExcelApplicationScope.Body>
                            </ui:ExcelApplicationScope>
                            <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[DT_Config]" DisplayName="For Each row en DT configuracion individual" sap2010:WorkflowViewState.IdRef="ForEachRow_6">
                              <ui:ForEachRow.Body>
                                <ActivityAction x:TypeArguments="sd:DataRow">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                  </ActivityAction.Argument>
                                  <If Condition="[row(&quot;UNIDAD&quot;).ToString = in_Solicitud(&quot;UNIDAD&quot;).ToString and row(&quot;ACTIVO&quot;).ToString = &quot;TRUE&quot;]" DisplayName="IF para asignar la celda de cola" sap2010:WorkflowViewState.IdRef="If_30">
                                    <If.Then>
                                      <Sequence DisplayName="Read Cola and conexion" sap2010:WorkflowViewState.IdRef="Sequence_59">
                                        <Assign DisplayName="Assign celda de cola" sap2010:WorkflowViewState.IdRef="Assign_71">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[Str_Cola]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[row("Lista de unidades por carga a FTP").ToString]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign DisplayName="Assign celda de cola" sap2010:WorkflowViewState.IdRef="Assign_74">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[Str_Conexion]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[row("Conexión SAP").ToString]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                    </If.Then>
                                  </If>
                                </ActivityAction>
                              </ui:ForEachRow.Body>
                            </ui:ForEachRow>
                            <If Condition="[Str_Cola.Length &gt; 0]" DisplayName="IF celda de cola tiene algo" sap2010:WorkflowViewState.IdRef="If_31">
                              <If.Then>
                                <Assign DisplayName="Asignar la lista de cola" sap2010:WorkflowViewState.IdRef="Assign_72">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="scg:List(x:String)">[ListaColas]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="scg:List(x:String)">[Str_Cola.ToString.ToUpper.Split({" "c,","c}, StringSplitOptions.RemoveEmptyEntries).ToList]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </If.Then>
                              <If.Else>
                                <Assign DisplayName="Asignar la unidad del correo" sap2010:WorkflowViewState.IdRef="Assign_73">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="scg:List(x:String)">[ListaColas]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="scg:List(x:String)">[new List (Of String) from {in_Solicitud("UNIDAD").ToString.ToUpper}]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </If.Else>
                            </If>
                            <Assign sap2010:WorkflowViewState.IdRef="Assign_69">
                              <Assign.To>
                                <OutArgument x:TypeArguments="sd:DataRow[]">[unidadesValidas]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="sd:DataRow[]">[DT_Config.Select().Where(Function (dr) ListaColas.Contains(dr("UNIDAD").ToString) and dr("ACTIVO").ToString.ToUpper = "TRUE").toArray]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap2010:WorkflowViewState.IdRef="Assign_148">
                              <Assign.To>
                                <OutArgument x:TypeArguments="sd:DataRow">[Currentrow]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="sd:DataRow">[DT_Config.Select().First(Function (dr) dr("UNIDAD").ToString = in_Solicitud("UNIDAD").ToString and dr("ACTIVO").ToString.ToUpper = "TRUE")]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                          <FlowStep.Next>
                            <FlowSwitch x:TypeArguments="x:String" x:Name="__ReferenceID0" DisplayName="Status" Expression="[in_Solicitud(&quot;STATUS&quot;).toString]" sap2010:WorkflowViewState.IdRef="FlowSwitch`1_1">
                              <FlowSwitch.Default>
                                <FlowStep x:Name="__ReferenceID5" sap2010:WorkflowViewState.IdRef="FlowStep_13">
                                  <ui:Comment DisplayName="Solicitud Completada" sap2010:WorkflowViewState.IdRef="Comment_1" Text="// Solicitud Completada, no hay ninguna accion requerida" />
                                </FlowStep>
                              </FlowSwitch.Default>
                              <FlowStep x:Key="" x:Name="__ReferenceID1" sap2010:WorkflowViewState.IdRef="FlowStep_5">
                                <TryCatch DisplayName="Paso 1 - Descarga de SAP" sap2010:WorkflowViewState.IdRef="TryCatch_10">
                                  <TryCatch.Try>
                                    <Sequence DisplayName="Paso 1" sap2010:WorkflowViewState.IdRef="Sequence_50">
                                      <ui:ForEach x:TypeArguments="sd:DataRow" CurrentIndex="{x:Null}" DisplayName="For Each" sap2010:WorkflowViewState.IdRef="ForEach`1_25" Values="[unidadesValidas]">
                                        <ui:ForEach.Body>
                                          <ActivityAction x:TypeArguments="sd:DataRow">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="item" />
                                            </ActivityAction.Argument>
                                            <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_52">
                                              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Leer Configs, Login y Descarga de archivos" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_30" UnSafe="False" WorkflowFileName="[Str_path &amp; &quot;P2P_PagoCobranzas_SAP_Descarga.xaml&quot;]">
                                                <ui:InvokeWorkflowFile.Arguments>
                                                  <InArgument x:TypeArguments="x:String" x:Key="Str_Unidad">[item("UNIDAD").ToString]</InArgument>
                                                  <OutArgument x:TypeArguments="x:String" x:Key="StatusReg">[StatusReg]</OutArgument>
                                                  <OutArgument x:TypeArguments="x:String" x:Key="CommentReg">[CommentReg]</OutArgument>
                                                  <InArgument x:TypeArguments="x:String" x:Key="Str_NombrePartidas">[item("Nombre archivo Partidas Abiertas").ToString]</InArgument>
                                                  <InArgument x:TypeArguments="x:String" x:Key="Str_NombreProveedores">[item("Nombre archivo Proveedores Creados").ToString]</InArgument>
                                                  <InArgument x:TypeArguments="x:String" x:Key="Str_path">[Str_path]</InArgument>
                                                </ui:InvokeWorkflowFile.Arguments>
                                              </ui:InvokeWorkflowFile>
                                            </Sequence>
                                          </ActivityAction>
                                        </ui:ForEach.Body>
                                      </ui:ForEach>
                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_66">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Object">[in_Solicitud("STATUS")]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Object">[StatusReg]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_75">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Object">[in_Solicitud("COMMENT")]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Object">[CommentReg]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:ExcelWriteRange AddHeaders="True" DataTable="[in_Solicitud.Table]" DisplayName="Write Range" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_1" SheetName="Registro" StartingCell="A1" />
                                    </Sequence>
                                  </TryCatch.Try>
                                  <TryCatch.Catches>
                                    <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_10">
                                      <ActivityAction x:TypeArguments="s:Exception">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                        </ActivityAction.Argument>
                                        <Switch x:TypeArguments="x:String" DisplayName="Switch" Expression="[exception.Message]" sap2010:WorkflowViewState.IdRef="Switch`1_5">
                                          <Switch.Default>
                                            <Sequence DisplayName="Error general" sap2010:WorkflowViewState.IdRef="Sequence_69">
                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_95">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Object">[in_Solicitud("STATUS")]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Object">["Error"]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_96">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Object">[in_Solicitud("COMMENT")]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">["Error general no contemplado en la descarga del archivo, revisar los sistemas de SAP"]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_97">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Object">[in_Solicitud("HORA FIN")]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Object">[datetime.Now.ToShortTimeString]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelWriteRange AddHeaders="True" DataTable="[in_Solicitud.Table]" DisplayName="Write Range" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_9" SheetName="Registro" StartingCell="A1" />
                                            </Sequence>
                                          </Switch.Default>
                                          <Sequence x:Key="RPA_EXCODE:GE_S002" DisplayName="Error de inicio de sesion" sap2010:WorkflowViewState.IdRef="Sequence_66">
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_89">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Object">[in_Solicitud("STATUS")]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Object">["Error"]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_90">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Object">[in_Solicitud("COMMENT")]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">["Error de inicio de sesion de SAP, credenciales incorrectas"]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_98">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Object">[in_Solicitud("HORA FIN")]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Object">[datetime.Now.ToShortTimeString]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:ExcelWriteRange AddHeaders="True" DataTable="[in_Solicitud.Table]" DisplayName="Write Range" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_6" SheetName="Registro" StartingCell="A1" />
                                          </Sequence>
                                          <Sequence x:Key="RPA_EXCODE:GE_S001" DisplayName="Error de conexion al iniciar SAP" sap2010:WorkflowViewState.IdRef="Sequence_67">
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_91">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Object">[in_Solicitud("STATUS")]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Object">["Error"]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_92">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Object">[in_Solicitud("COMMENT")]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Object">["Error de conexion en SAP al iniciar sesion"]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_99">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Object">[in_Solicitud("HORA FIN")]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Object">[datetime.Now.ToShortTimeString]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:ExcelWriteRange AddHeaders="True" DataTable="[in_Solicitud.Table]" DisplayName="Write Range" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_7" SheetName="Registro" StartingCell="A1" />
                                          </Sequence>
                                          <Sequence x:Key="RPA_EXCODE:LC_E001" DisplayName="Error en la lectura de configuracion" sap2010:WorkflowViewState.IdRef="Sequence_68">
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_93">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Object">[in_Solicitud("STATUS")]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Object">["Error"]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_94">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Object">[in_Solicitud("COMMENT")]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Object">["Error de lectura de configuracion previa al inicio de sesion de SAP"]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_100">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Object">[in_Solicitud("HORA FIN")]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Object">[datetime.Now.ToShortTimeString]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:ExcelWriteRange AddHeaders="True" DataTable="[in_Solicitud.Table]" DisplayName="Write Range" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_8" SheetName="Registro" StartingCell="A1" />
                                          </Sequence>
                                          <Sequence x:Key="RPA_EXCODE:SE_D001" DisplayName="Error al iniciar la transaccion de SAP" sap2010:WorkflowViewState.IdRef="Sequence_70">
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_101">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Object">[in_Solicitud("STATUS")]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Object">["Error"]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_102">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Object">[in_Solicitud("COMMENT")]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">["Error al entrar a la transaccion en SAP"]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_103">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Object">[in_Solicitud("HORA FIN")]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Object">[datetime.Now.ToShortTimeString]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:ExcelWriteRange AddHeaders="True" DataTable="[in_Solicitud.Table]" DisplayName="Write Range" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_10" SheetName="Registro" StartingCell="A1" />
                                          </Sequence>
                                          <Sequence x:Key="RPA_EXCODE:SE_D002" DisplayName="Error en la descarga del archivo" sap2010:WorkflowViewState.IdRef="Sequence_71">
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_104">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Object">[in_Solicitud("STATUS")]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Object">["Error"]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_105">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Object">[in_Solicitud("COMMENT")]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Object">["Error al descargar el archivo de SAP"]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_106">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Object">[in_Solicitud("HORA FIN")]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Object">[datetime.Now.ToShortTimeString]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:ExcelWriteRange AddHeaders="True" DataTable="[in_Solicitud.Table]" DisplayName="Write Range" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_11" SheetName="Registro" StartingCell="A1" />
                                          </Sequence>
                                          <Sequence x:Key="RPA_EXCODE:SE_D003" DisplayName="Error variante no encontrada" sap2010:WorkflowViewState.IdRef="Sequence_94">
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_151">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Object">[in_Solicitud("STATUS")]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Object">["Error"]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_152">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Object">[in_Solicitud("COMMENT")]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Object">["Error en SAP, variante no encontrada"]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_153">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Object">[in_Solicitud("HORA FIN")]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Object">[datetime.Now.ToShortTimeString]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:ExcelWriteRange AddHeaders="True" DataTable="[in_Solicitud.Table]" DisplayName="Write Range" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_24" SheetName="Registro" StartingCell="A1" />
                                          </Sequence>
                                        </Switch>
                                      </ActivityAction>
                                    </Catch>
                                  </TryCatch.Catches>
                                </TryCatch>
                                <FlowStep.Next>
                                  <x:Reference>__ReferenceID0</x:Reference>
                                </FlowStep.Next>
                              </FlowStep>
                              <FlowStep x:Key="Archivo Descargado" x:Name="__ReferenceID2" sap2010:WorkflowViewState.IdRef="FlowStep_8">
                                <TryCatch DisplayName="Paso 2 - Ejecutar Macro" sap2010:WorkflowViewState.IdRef="TryCatch_11">
                                  <TryCatch.Try>
                                    <Sequence DisplayName="Paso 2" sap2010:WorkflowViewState.IdRef="Sequence_54">
                                      <ui:ForEach x:TypeArguments="sd:DataRow" CurrentIndex="{x:Null}" DisplayName="For Each" sap2010:WorkflowViewState.IdRef="ForEach`1_27" Values="[unidadesValidas]">
                                        <ui:ForEach.Body>
                                          <ActivityAction x:TypeArguments="sd:DataRow">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="item" />
                                            </ActivityAction.Argument>
                                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_31" UnSafe="False" WorkflowFileName="[Str_path &amp; &quot;P2P_PagoCobranzas_EjecutarMacro.xaml&quot;]">
                                              <ui:InvokeWorkflowFile.Arguments>
                                                <InArgument x:TypeArguments="x:String" x:Key="Str_RutaDescarga">[item("Ruta de descarga de archivos").ToString]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="Str_Unidad">[item("UNIDAD").ToString]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="Str_Macro">[item("Usa Macro?").ToString]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="Str_MacroEntrada">[item("Ruta Archivos Entrada Macro").ToString]</InArgument>
                                                <OutArgument x:TypeArguments="x:String" x:Key="StatusReg">[StatusReg]</OutArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="Str_RutaMacro">[item("Ruta Macro").ToString]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="Str_NombreMacro">[item("Nombre de Macro").ToString]</InArgument>
                                                <InArgument x:TypeArguments="x:Double" x:Key="int_Reintentos">[int_Reintentos]</InArgument>
                                                <OutArgument x:TypeArguments="x:String" x:Key="CommentReg">[CommentReg]</OutArgument>
                                              </ui:InvokeWorkflowFile.Arguments>
                                            </ui:InvokeWorkflowFile>
                                          </ActivityAction>
                                        </ui:ForEach.Body>
                                      </ui:ForEach>
                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_76">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Object">[in_Solicitud("STATUS")]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Object">[StatusReg]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_77">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Object">[in_Solicitud("COMMENT")]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Object">[CommentReg]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:ExcelWriteRange AddHeaders="True" DataTable="[in_Solicitud.Table]" DisplayName="Write Range" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_2" SheetName="Registro" StartingCell="A1" />
                                    </Sequence>
                                  </TryCatch.Try>
                                  <TryCatch.Catches>
                                    <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_11">
                                      <ActivityAction x:TypeArguments="s:Exception">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                        </ActivityAction.Argument>
                                        <Switch x:TypeArguments="x:String" DisplayName="Switch" Expression="[exception.Message]" sap2010:WorkflowViewState.IdRef="Switch`1_6">
                                          <Switch.Default>
                                            <Sequence DisplayName="Error general" sap2010:WorkflowViewState.IdRef="Sequence_72">
                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_107">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Object">[in_Solicitud("STATUS")]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Object">["Error"]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_108">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Object">[in_Solicitud("COMMENT")]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">["Error general no contemplado en la ejecucion de macro"]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_109">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Object">[in_Solicitud("HORA FIN")]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Object">[datetime.Now.ToShortTimeString]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelWriteRange AddHeaders="True" DataTable="[in_Solicitud.Table]" DisplayName="Write Range" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_12" SheetName="Registro" StartingCell="A1" />
                                            </Sequence>
                                          </Switch.Default>
                                          <Sequence x:Key="RPA_EXCODE:EE_M001" DisplayName="Ejecucion de macro fallida" sap2010:WorkflowViewState.IdRef="Sequence_73">
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_110">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Object">[in_Solicitud("STATUS")]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Object">["Error"]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_111">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Object">[in_Solicitud("COMMENT")]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Object">["Error de macro, ejecucion fallida"]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_112">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Object">[in_Solicitud("HORA FIN")]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Object">[datetime.Now.ToShortTimeString]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:ExcelWriteRange AddHeaders="True" DataTable="[in_Solicitud.Table]" DisplayName="Write Range" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_13" SheetName="Registro" StartingCell="A1" />
                                          </Sequence>
                                          <Sequence x:Key="RPA_EXCODE:EE_M002" DisplayName="Error de ejecucion de macro" sap2010:WorkflowViewState.IdRef="Sequence_74">
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_113">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Object">[in_Solicitud("STATUS")]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Object">["Error"]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_114">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Object">[in_Solicitud("COMMENT")]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Object">["Error de ejecucion de macro"]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_115">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Object">[in_Solicitud("HORA FIN")]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Object">[datetime.Now.ToShortTimeString]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:ExcelWriteRange AddHeaders="True" DataTable="[in_Solicitud.Table]" DisplayName="Write Range" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_14" SheetName="Registro" StartingCell="A1" />
                                          </Sequence>
                                        </Switch>
                                      </ActivityAction>
                                    </Catch>
                                  </TryCatch.Catches>
                                </TryCatch>
                                <FlowStep.Next>
                                  <x:Reference>__ReferenceID0</x:Reference>
                                </FlowStep.Next>
                              </FlowStep>
                              <FlowStep x:Key="Listo para Carga" x:Name="__ReferenceID3" sap2010:WorkflowViewState.IdRef="FlowStep_9">
                                <TryCatch DisplayName="Paso 3 - Carga de Archivos" sap2010:WorkflowViewState.IdRef="TryCatch_12">
                                  <TryCatch.Try>
                                    <Sequence DisplayName="Paso 3 " sap2010:WorkflowViewState.IdRef="Sequence_56">
                                      <Assign DisplayName="Iniciar Variable Credenciales" sap2010:WorkflowViewState.IdRef="Assign_81">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="uou:Credential">[C_FTPCredentials]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="uou:Credential">[New credential()]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign DisplayName="Asignar Username" sap2010:WorkflowViewState.IdRef="Assign_82">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[C_FTPCredentials.Username]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[Currentrow("Usuario FTP").ToString]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign DisplayName="Asignar Password" sap2010:WorkflowViewState.IdRef="Assign_83">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[C_FTPCredentials.Password]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[Currentrow("Password FTP").ToString]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Login FileZilla" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_32" UnSafe="False" WorkflowFileName="[Str_path &amp; &quot;P2P_PagoCobranzas_LoginFileZilla.xaml&quot;]">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="x:String" x:Key="Str_PuertoFTP">[Currentrow("Puerto FTP").ToString]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="Str_ServidorFTP">[Currentrow("Servidor FTP").ToString]</InArgument>
                                          <InArgument x:TypeArguments="uou:Credential" x:Key="C_FTPCredentials">[C_FTPCredentials]</InArgument>
                                          <InArgument x:TypeArguments="x:Double" x:Key="int_Reintentos">[int_Reintentos]</InArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                      <ui:ForEach x:TypeArguments="sd:DataRow" CurrentIndex="{x:Null}" DisplayName="For Each" sap2010:WorkflowViewState.IdRef="ForEach`1_26" Values="[unidadesValidas]">
                                        <ui:ForEach.Body>
                                          <ActivityAction x:TypeArguments="sd:DataRow">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="item" />
                                            </ActivityAction.Argument>
                                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Carga de archivos" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_33" UnSafe="False" WorkflowFileName="[Str_path &amp; &quot;P2P_PagoCobranzas_CargaDeArchivos.xaml&quot;]">
                                              <ui:InvokeWorkflowFile.Arguments>
                                                <InArgument x:TypeArguments="x:String" x:Key="Str_MacroSalida">[item("Ruta Archivos de Salida").ToString]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="Str_Unidad">[item("UNIDAD").ToString]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="Str_Archivos">[item("Lista de archivos a cargar a FTP").ToString]</InArgument>
                                                <OutArgument x:TypeArguments="x:String" x:Key="StatusReg">[StatusReg]</OutArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="Str_Macro">[item("Usa Macro?").ToString]</InArgument>
                                                <OutArgument x:TypeArguments="x:String" x:Key="CommentReg">[CommentReg]</OutArgument>
                                                <InArgument x:TypeArguments="x:Double" x:Key="int_Reintentos">[int_Reintentos]</InArgument>
                                                <InArgument x:TypeArguments="uou:Credential" x:Key="C_FTPCredentials">[C_FTPCredentials]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="Str_PuertoFTP">[Currentrow("Puerto FTP").ToString]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="Str_ServidorFTP">[Currentrow("Servidor FTP").ToString]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="Str_path">[Str_path]</InArgument>
                                              </ui:InvokeWorkflowFile.Arguments>
                                            </ui:InvokeWorkflowFile>
                                          </ActivityAction>
                                        </ui:ForEach.Body>
                                      </ui:ForEach>
                                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Carga de archivo.ok" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_34" UnSafe="False" WorkflowFileName="[Str_path &amp; &quot;P2P_PagoCobranzas_ConfirmarSubida.xaml&quot;]">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="x:String" x:Key="Str_RutaMacro">[Currentrow("Ruta Macro").ToString]</InArgument>
                                          <OutArgument x:TypeArguments="x:String" x:Key="StatusReg">[StatusReg]</OutArgument>
                                          <InArgument x:TypeArguments="x:Double" x:Key="int_Reintentos">[int_Reintentos]</InArgument>
                                          <OutArgument x:TypeArguments="x:String" x:Key="CommentReg">[CommentReg]</OutArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="Str_Macro">[Currentrow("Usa Macro?").ToString]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="Str_NombreOK">[Currentrow("Nombre archivo.ok").ToString]</InArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_78">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Object">[in_Solicitud("STATUS")]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Object">[StatusReg]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_79">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Object">[in_Solicitud("COMMENT")]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Object">[CommentReg]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_84">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Object">[in_Solicitud("HORA FIN")]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Object">[datetime.Now.ToShortTimeString]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:ExcelWriteRange AddHeaders="True" DataTable="[in_Solicitud.Table]" DisplayName="Write Range" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_3" SheetName="Registro" StartingCell="A1" />
                                      <TryCatch DisplayName="TC - Asignar lista de correos a notificar" sap2010:WorkflowViewState.IdRef="TryCatch_15">
                                        <TryCatch.Try>
                                          <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Leer Archivo de configuracion general" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_12" WorkbookPath="[Str_ConfigGeneral]">
                                            <ui:ExcelApplicationScope.Body>
                                              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                                <ActivityAction.Argument>
                                                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                                </ActivityAction.Argument>
                                                <Sequence DisplayName="Leer Lista de Correos" sap2010:WorkflowViewState.IdRef="Sequence_88">
                                                  <Sequence.Variables>
                                                    <Variable x:TypeArguments="sd:DataTable" Name="DT_Correos" />
                                                  </Sequence.Variables>
                                                  <Assign DisplayName="Inicializar Lista" sap2010:WorkflowViewState.IdRef="Assign_149">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="scg:List(x:String)">[ListaCorreos]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="scg:List(x:String)">[new list (of string)]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                  <ui:ExcelReadRange AddHeaders="True" DataTable="[DT_Correos]" DisplayName="Read Hoja de Correos" sap2010:WorkflowViewState.IdRef="ExcelReadRange_14" SheetName="Correo_Notificacion">
                                                    <ui:ExcelReadRange.Range>
                                                      <InArgument x:TypeArguments="x:String">
                                                        <Literal x:TypeArguments="x:String" Value="" />
                                                      </InArgument>
                                                    </ui:ExcelReadRange.Range>
                                                  </ui:ExcelReadRange>
                                                  <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[DT_Correos]" DisplayName="Crear lista de correos" sap2010:WorkflowViewState.IdRef="ForEachRow_11">
                                                    <ui:ForEachRow.Body>
                                                      <ActivityAction x:TypeArguments="sd:DataRow">
                                                        <ActivityAction.Argument>
                                                          <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                                        </ActivityAction.Argument>
                                                        <AddToCollection x:TypeArguments="x:String" Collection="[ListaCorreos]" DisplayName="Add To ListaCorreos" sap2010:WorkflowViewState.IdRef="AddToCollection`1_5" Item="[row(&quot;Correo&quot;).ToString]" />
                                                      </ActivityAction>
                                                    </ui:ForEachRow.Body>
                                                  </ui:ForEachRow>
                                                </Sequence>
                                              </ActivityAction>
                                            </ui:ExcelApplicationScope.Body>
                                          </ui:ExcelApplicationScope>
                                        </TryCatch.Try>
                                        <TryCatch.Catches>
                                          <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_15">
                                            <ActivityAction x:TypeArguments="s:Exception">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                              </ActivityAction.Argument>
                                              <Assign DisplayName="Assign Lista de correos Default" sap2010:WorkflowViewState.IdRef="Assign_150">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="scg:List(x:String)">[ListaCorreos]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="scg:List(x:String)">[new List (Of String) from {"jose.morales@cmi.co;pedro.ambrocio@cmi.co"}]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </ActivityAction>
                                          </Catch>
                                        </TryCatch.Catches>
                                      </TryCatch>
                                      <If Condition="[Currentrow(&quot;Usa Macro?&quot;).ToString = &quot;Sí&quot;]" sap2010:WorkflowViewState.IdRef="If_32">
                                        <If.Then>
                                          <Sequence DisplayName="Construir tabla y mandar correo" sap2010:WorkflowViewState.IdRef="Sequence_93">
                                            <Sequence DisplayName="Construir tabla HTML para Email" sap2010:WorkflowViewState.IdRef="Sequence_92">
                                              <ui:ReadRange AddHeaders="True" DataTable="[DT_TablaMacro]" DisplayName="Read Range tabla de macro" sap2010:WorkflowViewState.IdRef="ReadRange_1" Range="C12:E18" SheetName="MENU" WorkbookPath="[Currentrow(&quot;Ruta Macro&quot;).ToString]" />
                                              <ui:CreateFile ContinueOnError="{x:Null}" Name="{x:Null}" DisplayName="Create html text file" sap2010:WorkflowViewState.IdRef="CreateFile_1" Path="[Str_path &amp; &quot;html.txt&quot;]" />
                                              <ui:AppendLine DisplayName="Append line - Insertar tags de inicio de HTML" FileName="[Str_path &amp; &quot;html.txt&quot;]" sap2010:WorkflowViewState.IdRef="AppendLine_1" Text="&lt;html&gt;&lt;body&gt;&lt;table border = 1&gt;" />
                                              <Sequence DisplayName="Agregar Headers" sap2010:WorkflowViewState.IdRef="Sequence_89">
                                                <ui:AppendLine DisplayName="Append line - Iniciar headers" FileName="[Str_path &amp; &quot;html.txt&quot;]" sap2010:WorkflowViewState.IdRef="AppendLine_2" Text="&lt;tr&gt;" />
                                                <ui:ForEach x:TypeArguments="sd:DataColumn" CurrentIndex="{x:Null}" DisplayName="For each column add headers" sap2010:WorkflowViewState.IdRef="ForEach`1_28" Values="[DT_TablaMacro.Columns]">
                                                  <ui:ForEach.Body>
                                                    <ActivityAction x:TypeArguments="sd:DataColumn">
                                                      <ActivityAction.Argument>
                                                        <DelegateInArgument x:TypeArguments="sd:DataColumn" Name="col" />
                                                      </ActivityAction.Argument>
                                                      <ui:AppendLine DisplayName="Append line - Agregar cada headers" FileName="[Str_path &amp; &quot;html.txt&quot;]" sap2010:WorkflowViewState.IdRef="AppendLine_3" Text="[string.Format(&quot;&lt;th&gt;{0}&lt;/th&gt;&quot;,col.ColumnName)]" />
                                                    </ActivityAction>
                                                  </ui:ForEach.Body>
                                                </ui:ForEach>
                                                <ui:AppendLine DisplayName="Append line - Finalizar headers" FileName="[Str_path &amp; &quot;html.txt&quot;]" sap2010:WorkflowViewState.IdRef="AppendLine_4" Text="&lt;/tr&gt;" />
                                              </Sequence>
                                              <Sequence DisplayName="Agregar Filas de data" sap2010:WorkflowViewState.IdRef="Sequence_91">
                                                <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[DT_TablaMacro]" DisplayName="For each row - agregar fila" sap2010:WorkflowViewState.IdRef="ForEachRow_12">
                                                  <ui:ForEachRow.Body>
                                                    <ActivityAction x:TypeArguments="sd:DataRow">
                                                      <ActivityAction.Argument>
                                                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                                      </ActivityAction.Argument>
                                                      <Sequence DisplayName="Agregar data rows" sap2010:WorkflowViewState.IdRef="Sequence_90">
                                                        <ui:AppendLine DisplayName="Append line - Iniciar Filas" FileName="[Str_path &amp; &quot;html.txt&quot;]" sap2010:WorkflowViewState.IdRef="AppendLine_5" Text="&lt;tr&gt;" />
                                                        <ui:ForEach x:TypeArguments="sd:DataColumn" CurrentIndex="{x:Null}" DisplayName="For each - Agregar cada fila" sap2010:WorkflowViewState.IdRef="ForEach`1_29" Values="[DT_TablaMacro.Columns]">
                                                          <ui:ForEach.Body>
                                                            <ActivityAction x:TypeArguments="sd:DataColumn">
                                                              <ActivityAction.Argument>
                                                                <DelegateInArgument x:TypeArguments="sd:DataColumn" Name="col" />
                                                              </ActivityAction.Argument>
                                                              <ui:AppendLine DisplayName="Append line - Agregar fila" FileName="[Str_path &amp; &quot;html.txt&quot;]" sap2010:WorkflowViewState.IdRef="AppendLine_6" Text="[string.Format(&quot;&lt;td&gt;{0}&lt;/td&gt;&quot;,row(col.ColumnName).ToString)]" />
                                                            </ActivityAction>
                                                          </ui:ForEach.Body>
                                                        </ui:ForEach>
                                                        <ui:AppendLine DisplayName="Append line - Finalizar filas" FileName="[Str_path &amp; &quot;html.txt&quot;]" sap2010:WorkflowViewState.IdRef="AppendLine_7" Text="&lt;/tr&gt;" />
                                                      </Sequence>
                                                    </ActivityAction>
                                                  </ui:ForEachRow.Body>
                                                </ui:ForEachRow>
                                              </Sequence>
                                              <ui:AppendLine DisplayName="Append line - Insertar tags de fin de HTML" FileName="[Str_path &amp; &quot;html.txt&quot;]" sap2010:WorkflowViewState.IdRef="AppendLine_8" Text="&lt;/table&gt;&lt;/body&gt;&lt;/html&gt;" />
                                              <ui:ReadTextFile Content="[TablaMacro]" DisplayName="Read HTML text and add to variable" FileName="[Str_path &amp; &quot;html.txt&quot;]" sap2010:WorkflowViewState.IdRef="ReadTextFile_1" />
                                              <ui:Delete ContinueOnError="{x:Null}" DisplayName="Delete File" sap2010:WorkflowViewState.IdRef="Delete_1" Path="[Str_path &amp; &quot;html.txt&quot;]" />
                                            </Sequence>
                                            <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" TimeoutMS="{x:Null}" Body="[&quot;&lt;p&gt;Buen día&lt;/p&gt;&lt;p&gt;Notificando la ejecución &lt;b&gt;exitosa&lt;/b&gt; del artefacto de carga de pagos al portal de cobranzas, se ejecuto la unidad: &lt;b&gt;&quot; &amp; in_Solicitud(&quot;UNIDAD&quot;).ToString &amp; &quot;&lt;/b&gt; del mandante &lt;b&gt;&quot; &amp; in_Solicitud(&quot;MANDANTE&quot;).ToString &amp; &quot;&lt;/b&gt; y el proceso finalizo correctamente, los datos de la ejecucion de la macro son:&lt;/p&gt;&quot;+ TablaMacro + &quot;&lt;p&gt;Este es un mensaje automatico, por favor no responder, Saludos.&lt;/p&gt;&lt;p&gt;Automaty BOT&lt;/p&gt;&quot;]" DisplayName="Mandar correo de notificacion" sap2010:WorkflowViewState.IdRef="SendOutlookMail_2" IsBodyHtml="True" IsDraft="False" Subject="Notificacion de ejecucion exitosa: Carga de pagos al portal de cobranzas" To="[String.Join(&quot;;&quot;, ListaCorreos) &amp; &quot;;&quot; &amp; Currentrow(&quot;Correo a notificar&quot;).ToString]">
                                              <ui:SendOutlookMail.Files>
                                                <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                                                  <InArgument x:TypeArguments="x:String">[Currentrow("Ruta Archivos de Salida").ToString + Currentrow("UNIDAD").ToString &amp; "\" &amp; "SALIDA" &amp; "\" &amp; "Reporte.xlsx"]</InArgument>
                                                </scg:List>
                                              </ui:SendOutlookMail.Files>
                                            </ui:SendOutlookMail>
                                          </Sequence>
                                        </If.Then>
                                        <If.Else>
                                          <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" TimeoutMS="{x:Null}" Body="[&quot;&lt;p&gt;Buen día&lt;/p&gt;&lt;p&gt;Notificando la ejecución &lt;b&gt;exitosa&lt;/b&gt; del artefacto de carga de pagos al portal de cobranzas, se ejecuto la unidad: &lt;b&gt;&quot; &amp; in_Solicitud(&quot;UNIDAD&quot;).ToString &amp; &quot;&lt;/b&gt; del mandante &lt;b&gt;&quot; &amp; in_Solicitud(&quot;MANDANTE&quot;).ToString &amp; &quot;&lt;/b&gt; y el proceso finalizo correctamente&lt;/p&gt;&lt;p&gt;Este es un mensaje automatico, por favor no responder, Saludos.&lt;/p&gt;&lt;p&gt;Automaty BOT&lt;/p&gt;&quot;]" DisplayName="Mandar correo de notificacion" sap2010:WorkflowViewState.IdRef="SendOutlookMail_4" IsBodyHtml="True" IsDraft="False" Subject="Notificacion de ejecucion exitosa: Carga de pagos al portal de cobranzas" To="[String.Join(&quot;;&quot;, ListaCorreos) &amp; &quot;;&quot; &amp; Currentrow(&quot;Correo a notificar&quot;).ToString]">
                                            <ui:SendOutlookMail.Files>
                                              <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4" />
                                            </ui:SendOutlookMail.Files>
                                          </ui:SendOutlookMail>
                                        </If.Else>
                                      </If>
                                    </Sequence>
                                  </TryCatch.Try>
                                  <TryCatch.Catches>
                                    <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_12">
                                      <ActivityAction x:TypeArguments="s:Exception">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                        </ActivityAction.Argument>
                                        <Switch x:TypeArguments="x:String" DisplayName="Switch" Expression="[exception.Message]" sap2010:WorkflowViewState.IdRef="Switch`1_7">
                                          <Switch.Default>
                                            <Sequence DisplayName="Error general" sap2010:WorkflowViewState.IdRef="Sequence_76">
                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_116">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Object">[in_Solicitud("STATUS")]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Object">["Error"]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_117">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Object">[in_Solicitud("COMMENT")]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Object">["Error general no contemplado en la carga de archivos a FileZilla"]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_118">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Object">[in_Solicitud("HORA FIN")]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Object">[datetime.Now.ToShortTimeString]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelWriteRange AddHeaders="True" DataTable="[in_Solicitud.Table]" DisplayName="Write Range" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_15" SheetName="Registro" StartingCell="A1" />
                                            </Sequence>
                                          </Switch.Default>
                                          <Sequence x:Key="RPA_EXCODE:FZ_E001" DisplayName="Credenciales erroneas" sap2010:WorkflowViewState.IdRef="Sequence_78">
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_122">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Object">[in_Solicitud("STATUS")]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Object">["Error"]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_123">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Object">[in_Solicitud("COMMENT")]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">["Error de inicio de sesion en FileZilla, credenciales erroneas"]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_124">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Object">[in_Solicitud("HORA FIN")]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Object">[datetime.Now.ToShortTimeString]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:ExcelWriteRange AddHeaders="True" DataTable="[in_Solicitud.Table]" DisplayName="Write Range" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_17" SheetName="Registro" StartingCell="A1" />
                                          </Sequence>
                                          <Sequence x:Key="RPA_EXCODE:FZ_E002" DisplayName="Error de inicio de sesion" sap2010:WorkflowViewState.IdRef="Sequence_79">
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_125">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Object">[in_Solicitud("STATUS")]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Object">["Error"]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_126">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Object">[in_Solicitud("COMMENT")]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Object">["Error al iniciar FileZilla, inicio de sesion de no disponible"]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_127">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Object">[in_Solicitud("HORA FIN")]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Object">[datetime.Now.ToShortTimeString]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:ExcelWriteRange AddHeaders="True" DataTable="[in_Solicitud.Table]" DisplayName="Write Range" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_18" SheetName="Registro" StartingCell="A1" />
                                          </Sequence>
                                          <Sequence x:Key="RPA_EXCODE:FZ_E003" DisplayName="Transferencia Fallida" sap2010:WorkflowViewState.IdRef="Sequence_80">
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_128">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Object">[in_Solicitud("STATUS")]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Object">["Error"]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_129">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Object">[in_Solicitud("COMMENT")]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Object">["Error al cargar los archivos a FileZilla, transferencia fallida"]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_130">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Object">[in_Solicitud("HORA FIN")]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Object">[datetime.Now.ToShortTimeString]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:ExcelWriteRange AddHeaders="True" DataTable="[in_Solicitud.Table]" DisplayName="Write Range" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_19" SheetName="Registro" StartingCell="A1" />
                                          </Sequence>
                                          <Sequence x:Key="RPA_EXCODE:FZ_E004" DisplayName="Error de carga, no todos los archivos fueron exitosos" sap2010:WorkflowViewState.IdRef="Sequence_81">
                                            <ui:KillProcess ContinueOnError="{x:Null}" Process="{x:Null}" DisplayName="Kill Process" sap2010:WorkflowViewState.IdRef="KillProcess_1" ProcessName="filezilla" />
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_131">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Object">[in_Solicitud("STATUS")]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Object">["Error"]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_132">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Object">[in_Solicitud("COMMENT")]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Object">["Error al cargar los archivos a FileZilla, no se han subido exitosamente todos los archivos"]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_133">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Object">[in_Solicitud("HORA FIN")]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Object">[datetime.Now.ToShortTimeString]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:ExcelWriteRange AddHeaders="True" DataTable="[in_Solicitud.Table]" DisplayName="Write Range" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_20" SheetName="Registro" StartingCell="A1" />
                                          </Sequence>
                                          <Sequence x:Key="RPA_EXCODE:FZ_E005" DisplayName="Error al cargar los archivos a FileZilla" sap2010:WorkflowViewState.IdRef="Sequence_82">
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_134">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Object">[in_Solicitud("STATUS")]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Object">["Error"]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_135">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Object">[in_Solicitud("COMMENT")]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Object">["Error al cargar los archivos a FileZilla"]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_136">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Object">[in_Solicitud("HORA FIN")]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Object">[datetime.Now.ToShortTimeString]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:ExcelWriteRange AddHeaders="True" DataTable="[in_Solicitud.Table]" DisplayName="Write Range" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_21" SheetName="Registro" StartingCell="A1" />
                                          </Sequence>
                                          <Sequence x:Key="RPA_EXCODE:FZ_E006" DisplayName="Error al cargar el archivo.ok" sap2010:WorkflowViewState.IdRef="Sequence_83">
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_137">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Object">[in_Solicitud("STATUS")]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Object">["Error"]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_138">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Object">[in_Solicitud("COMMENT")]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">["Error al cargar el archivo.ok a FileZilla"]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_139">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Object">[in_Solicitud("HORA FIN")]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Object">[datetime.Now.ToShortTimeString]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:ExcelWriteRange AddHeaders="True" DataTable="[in_Solicitud.Table]" DisplayName="Write Range" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_22" SheetName="Registro" StartingCell="A1" />
                                          </Sequence>
                                        </Switch>
                                      </ActivityAction>
                                    </Catch>
                                  </TryCatch.Catches>
                                </TryCatch>
                                <FlowStep.Next>
                                  <x:Reference>__ReferenceID0</x:Reference>
                                </FlowStep.Next>
                              </FlowStep>
                              <FlowStep x:Key="Error" x:Name="__ReferenceID6" sap2010:WorkflowViewState.IdRef="FlowStep_14">
                                <Sequence DisplayName="Notificar Error" sap2010:WorkflowViewState.IdRef="Sequence_75">
                                  <ui:KillProcess Process="{x:Null}" ContinueOnError="True" DisplayName="Kill Process SAP" sap2010:WorkflowViewState.IdRef="KillProcess_4" ProcessName="saplogon" />
                                  <ui:KillProcess ContinueOnError="{x:Null}" Process="{x:Null}" DisplayName="Kill Process FileZilla" sap2010:WorkflowViewState.IdRef="KillProcess_5" ProcessName="filezilla" />
                                  <TryCatch DisplayName="TC - Asignar lista de correos a notificar" sap2010:WorkflowViewState.IdRef="TryCatch_13">
                                    <TryCatch.Try>
                                      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Leer Archivo de configuracion general" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_8" WorkbookPath="[Str_ConfigGeneral]">
                                        <ui:ExcelApplicationScope.Body>
                                          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                            </ActivityAction.Argument>
                                            <Sequence DisplayName="Leer Lista de Correos" sap2010:WorkflowViewState.IdRef="Sequence_84">
                                              <Sequence.Variables>
                                                <Variable x:TypeArguments="sd:DataTable" Name="DT_Correos" />
                                              </Sequence.Variables>
                                              <Assign DisplayName="Inicializar Lista" sap2010:WorkflowViewState.IdRef="Assign_140">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="scg:List(x:String)">[ListaCorreos]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="scg:List(x:String)">[new list (of string)]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadRange AddHeaders="True" DataTable="[DT_Correos]" DisplayName="Read Hoja de Correos" sap2010:WorkflowViewState.IdRef="ExcelReadRange_10" SheetName="Correo_Notificacion">
                                                <ui:ExcelReadRange.Range>
                                                  <InArgument x:TypeArguments="x:String">
                                                    <Literal x:TypeArguments="x:String" Value="" />
                                                  </InArgument>
                                                </ui:ExcelReadRange.Range>
                                              </ui:ExcelReadRange>
                                              <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[DT_Correos]" DisplayName="Crear lista de correos" sap2010:WorkflowViewState.IdRef="ForEachRow_7">
                                                <ui:ForEachRow.Body>
                                                  <ActivityAction x:TypeArguments="sd:DataRow">
                                                    <ActivityAction.Argument>
                                                      <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                                    </ActivityAction.Argument>
                                                    <AddToCollection x:TypeArguments="x:String" Collection="[ListaCorreos]" DisplayName="Add To ListaCorreos" sap2010:WorkflowViewState.IdRef="AddToCollection`1_1" Item="[row(&quot;Correo&quot;).ToString]" />
                                                  </ActivityAction>
                                                </ui:ForEachRow.Body>
                                              </ui:ForEachRow>
                                            </Sequence>
                                          </ActivityAction>
                                        </ui:ExcelApplicationScope.Body>
                                      </ui:ExcelApplicationScope>
                                    </TryCatch.Try>
                                    <TryCatch.Catches>
                                      <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_13">
                                        <ActivityAction x:TypeArguments="s:Exception">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                          </ActivityAction.Argument>
                                          <Assign DisplayName="Assign Lista de correos Default" sap2010:WorkflowViewState.IdRef="Assign_145">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="scg:List(x:String)">[ListaCorreos]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="scg:List(x:String)">[new List (Of String) from {"jose.morales@cmi.co;pedro.ambrocio@cmi.co"}]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </ActivityAction>
                                      </Catch>
                                    </TryCatch.Catches>
                                  </TryCatch>
                                  <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" TimeoutMS="{x:Null}" Body="[&quot;&lt;p&gt;Buen día&lt;/p&gt;&lt;p&gt;Notificando la ejecución fallida del artefacto de carga de pagos al portal de cobranzas en la unidad: &lt;b&gt;&quot; &amp; in_Solicitud(&quot;UNIDAD&quot;).ToString &amp; &quot;&lt;/b&gt; y el mandante: &lt;b&gt;&quot; &amp; in_Solicitud(&quot;MANDANTE&quot;).ToString &amp; &quot;&lt;/b&gt; , el motivo de la excepcion se debe a un: &lt;b&gt;&quot; &amp; in_Solicitud(&quot;COMMENT&quot;).ToString &amp; &quot;&lt;/b&gt;, se recomienda tomar las medidas necesarias y reiniciar el artefacto.&lt;/p&gt;&lt;p&gt;Este es un mensaje automatico, por favor no responder, Saludos.&lt;/p&gt;&lt;p&gt;Automaty BOT&lt;/p&gt;&quot;]" DisplayName="Mandar correo de notificacion" sap2010:WorkflowViewState.IdRef="SendOutlookMail_1" IsBodyHtml="True" IsDraft="False" Subject="Notificacion de error de ejecucion: Carga de pagos al portal de cobranzas" To="[String.Join(&quot;;&quot;, ListaCorreos)]">
                                    <ui:SendOutlookMail.Files>
                                      <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4" />
                                    </ui:SendOutlookMail.Files>
                                  </ui:SendOutlookMail>
                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_141">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Object">[in_Solicitud("STATUS")]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Object">["Error de ejecucion"]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_142">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Object">[in_Solicitud("HORA FIN")]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Object">[datetime.Now.ToShortTimeString]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <ui:ExcelWriteRange AddHeaders="True" DataTable="[in_Solicitud.Table]" DisplayName="Write Range" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_23" SheetName="Registro" StartingCell="A1" />
                                </Sequence>
                              </FlowStep>
                            </FlowSwitch>
                          </FlowStep.Next>
                        </FlowStep>
                      </Flowchart.StartNode>
                      <x:Reference>__ReferenceID1</x:Reference>
                      <x:Reference>__ReferenceID0</x:Reference>
                      <x:Reference>__ReferenceID2</x:Reference>
                      <x:Reference>__ReferenceID3</x:Reference>
                      <x:Reference>__ReferenceID4</x:Reference>
                      <x:Reference>__ReferenceID5</x:Reference>
                      <x:Reference>__ReferenceID6</x:Reference>
                    </Flowchart>
                  </TryCatch.Try>
                  <TryCatch.Catches>
                    <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_6">
                      <ActivityAction x:TypeArguments="s:Exception">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Error general" sap2010:WorkflowViewState.IdRef="Sequence_77">
                          <ui:KillProcess Process="{x:Null}" ContinueOnError="True" DisplayName="Kill Process SAP" sap2010:WorkflowViewState.IdRef="KillProcess_2" ProcessName="saplogon" />
                          <ui:KillProcess ContinueOnError="{x:Null}" Process="{x:Null}" DisplayName="Kill Process FileZilla" sap2010:WorkflowViewState.IdRef="KillProcess_3" ProcessName="filezilla" />
                          <Assign sap2010:WorkflowViewState.IdRef="Assign_119">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[in_Solicitud("STATUS")]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Object">["Error de ejecucion"]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap2010:WorkflowViewState.IdRef="Assign_120">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[in_Solicitud("COMMENT")]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">["Error general no contemplado en la carga de configuraciones"]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap2010:WorkflowViewState.IdRef="Assign_121">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[in_Solicitud("HORA FIN")]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Object">[datetime.Now.ToShortTimeString]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:ExcelWriteRange AddHeaders="True" DataTable="[in_Solicitud.Table]" DisplayName="Write Range" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_16" SheetName="Registro" StartingCell="A1" />
                          <TryCatch DisplayName="TC - Asignar lista de correos a notificar" sap2010:WorkflowViewState.IdRef="TryCatch_14">
                            <TryCatch.Try>
                              <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Leer Archivo de configuracion general" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_11" WorkbookPath="[Str_ConfigGeneral]">
                                <ui:ExcelApplicationScope.Body>
                                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Leer Lista de Correos" sap2010:WorkflowViewState.IdRef="Sequence_87">
                                      <Sequence.Variables>
                                        <Variable x:TypeArguments="sd:DataTable" Name="DT_Correos" />
                                      </Sequence.Variables>
                                      <Assign DisplayName="Inicializar Lista" sap2010:WorkflowViewState.IdRef="Assign_146">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="scg:List(x:String)">[ListaCorreos]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="scg:List(x:String)">[new list (of string)]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:ExcelReadRange AddHeaders="True" DataTable="[DT_Correos]" DisplayName="Read Hoja de Correos" sap2010:WorkflowViewState.IdRef="ExcelReadRange_13" SheetName="Correo_Notificacion">
                                        <ui:ExcelReadRange.Range>
                                          <InArgument x:TypeArguments="x:String">
                                            <Literal x:TypeArguments="x:String" Value="" />
                                          </InArgument>
                                        </ui:ExcelReadRange.Range>
                                      </ui:ExcelReadRange>
                                      <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[DT_Correos]" DisplayName="Crear lista de correos" sap2010:WorkflowViewState.IdRef="ForEachRow_10">
                                        <ui:ForEachRow.Body>
                                          <ActivityAction x:TypeArguments="sd:DataRow">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                            </ActivityAction.Argument>
                                            <AddToCollection x:TypeArguments="x:String" Collection="[ListaCorreos]" DisplayName="Add To ListaCorreos" sap2010:WorkflowViewState.IdRef="AddToCollection`1_4" Item="[row(&quot;Correo&quot;).ToString]" />
                                          </ActivityAction>
                                        </ui:ForEachRow.Body>
                                      </ui:ForEachRow>
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ExcelApplicationScope.Body>
                              </ui:ExcelApplicationScope>
                            </TryCatch.Try>
                            <TryCatch.Catches>
                              <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_14">
                                <ActivityAction x:TypeArguments="s:Exception">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                  </ActivityAction.Argument>
                                  <Assign DisplayName="Assign Lista de correos Default" sap2010:WorkflowViewState.IdRef="Assign_147">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="scg:List(x:String)">[ListaCorreos]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="scg:List(x:String)">[new List (Of String) from {"jose.morales@cmi.co;pedro.ambrocio@cmi.co"}]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </ActivityAction>
                              </Catch>
                            </TryCatch.Catches>
                          </TryCatch>
                          <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" TimeoutMS="{x:Null}" Body="[&quot;&lt;p&gt;Buen día&lt;/p&gt;&lt;p&gt;Notificando la ejecución fallida del artefacto de carga de pagos al portal de cobranzas en la unidad: &lt;b&gt;&quot; &amp; in_Solicitud(&quot;UNIDAD&quot;).ToString &amp; &quot;&lt;/b&gt; y el mandante: &lt;b&gt;&quot; &amp; in_Solicitud(&quot;MANDANTE&quot;).ToString &amp; &quot;&lt;/b&gt; , el motivo de la excepcion se debe a un: &lt;b&gt;&quot; &amp; in_Solicitud(&quot;COMMENT&quot;).ToString &amp; &quot;&lt;/b&gt;, se recomienda tomar las medidas necesarias y reiniciar el artefacto.&lt;/p&gt;&lt;p&gt;Este es un mensaje automatico, por favor no responder, Saludos.&lt;/p&gt;&lt;p&gt;Automaty BOT&lt;/p&gt;&quot;]" DisplayName="Mandar correo de notificacion" sap2010:WorkflowViewState.IdRef="SendOutlookMail_5" IsBodyHtml="True" IsDraft="False" Subject="Notificacion de error de ejecucion: Carga de pagos al portal de cobranzas" To="[String.Join(&quot;;&quot;, ListaCorreos)]">
                            <ui:SendOutlookMail.Files>
                              <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4" />
                            </ui:SendOutlookMail.Files>
                          </ui:SendOutlookMail>
                          <TerminateWorkflow DisplayName="Terminate WorkFlow and Return to main" Exception="[new Exception(&quot;RPA_EXCODE:GE_S002&quot;)]" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_1" />
                        </Sequence>
                      </ActivityAction>
                    </Catch>
                  </TryCatch.Catches>
                </TryCatch>
              </FlowStep>
            </Flowchart.StartNode>
            <x:Reference>__ReferenceID7</x:Reference>
          </Flowchart>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
    </ui:ExcelApplicationScope>
    <sads:DebugSymbol.Symbol>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</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="ExcelReadRange_9" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="ExcelReadCell_1" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="ExcelReadCell_2" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="Sequence_58" sap:VirtualizedContainerService.HintSize="336,381">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_7" sap:VirtualizedContainerService.HintSize="414,490">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_71" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_74" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_59" sap:VirtualizedContainerService.HintSize="264,284">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_30" sap:VirtualizedContainerService.HintSize="464,432">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_6" sap:VirtualizedContainerService.HintSize="414,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_72" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_73" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_31" sap:VirtualizedContainerService.HintSize="414,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_69" sap:VirtualizedContainerService.HintSize="414,60" />
      <sap2010:ViewStateData Id="Assign_148" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_51" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Comment_1" sap:VirtualizedContainerService.HintSize="314,74">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_13">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">583,143</av:Point>
            <av:Size x:Key="ShapeSize">314,74</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_30" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_52" sap:VirtualizedContainerService.HintSize="336,211">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_25" sap:VirtualizedContainerService.HintSize="352,345" />
      <sap2010:ViewStateData Id="Assign_66" sap:VirtualizedContainerService.HintSize="352,60" />
      <sap2010:ViewStateData Id="Assign_75" sap:VirtualizedContainerService.HintSize="352,60" />
      <sap2010:ViewStateData Id="ExcelWriteRange_1" sap:VirtualizedContainerService.HintSize="352,87" />
      <sap2010:ViewStateData Id="Sequence_50" sap:VirtualizedContainerService.HintSize="374,796">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_95" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_96" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_97" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="ExcelWriteRange_9" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_69" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_89" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_90" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_98" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="ExcelWriteRange_6" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_66" sap:VirtualizedContainerService.HintSize="336,505">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_91" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_92" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_99" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="ExcelWriteRange_7" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_67" sap:VirtualizedContainerService.HintSize="336,511">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_93" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_94" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_100" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="ExcelWriteRange_8" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_68" sap:VirtualizedContainerService.HintSize="336,505">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_101" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_102" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_103" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="ExcelWriteRange_10" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_70" sap:VirtualizedContainerService.HintSize="336,508">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_104" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_105" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_106" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="ExcelWriteRange_11" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_71" sap:VirtualizedContainerService.HintSize="336,508">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_151" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_152" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_153" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="ExcelWriteRange_24" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_94" sap:VirtualizedContainerService.HintSize="336,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Switch`1_5" sap:VirtualizedContainerService.HintSize="476,805">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_10" sap:VirtualizedContainerService.HintSize="482,874">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_10" sap:VirtualizedContainerService.HintSize="200,51" />
      <sap2010:ViewStateData Id="FlowStep_5">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">100,414.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">100,440 70,440 70,198.25 365,198.25</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_31" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ForEach`1_27" sap:VirtualizedContainerService.HintSize="330,221" />
      <sap2010:ViewStateData Id="Assign_76" sap:VirtualizedContainerService.HintSize="330,60" />
      <sap2010:ViewStateData Id="Assign_77" sap:VirtualizedContainerService.HintSize="330,60" />
      <sap2010:ViewStateData Id="ExcelWriteRange_2" sap:VirtualizedContainerService.HintSize="330,87" />
      <sap2010:ViewStateData Id="Sequence_54" sap:VirtualizedContainerService.HintSize="352,672">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_107" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_108" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_109" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="ExcelWriteRange_12" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_72" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_110" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_111" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_112" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="ExcelWriteRange_13" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_73" sap:VirtualizedContainerService.HintSize="336,511">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_113" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_114" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_115" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="ExcelWriteRange_14" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_74" sap:VirtualizedContainerService.HintSize="336,511">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Switch`1_6" sap:VirtualizedContainerService.HintSize="476,158">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_11" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_11" sap:VirtualizedContainerService.HintSize="200,51" />
      <sap2010:ViewStateData Id="FlowStep_8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">100,494.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">100,520 70,520 70,198.25 365,198.25</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_81" sap:VirtualizedContainerService.HintSize="675,60" />
      <sap2010:ViewStateData Id="Assign_82" sap:VirtualizedContainerService.HintSize="675,60" />
      <sap2010:ViewStateData Id="Assign_83" sap:VirtualizedContainerService.HintSize="675,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_32" sap:VirtualizedContainerService.HintSize="675,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_33" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ForEach`1_26" sap:VirtualizedContainerService.HintSize="675,221" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_34" sap:VirtualizedContainerService.HintSize="675,87" />
      <sap2010:ViewStateData Id="Assign_78" sap:VirtualizedContainerService.HintSize="675,60" />
      <sap2010:ViewStateData Id="Assign_79" sap:VirtualizedContainerService.HintSize="675,60" />
      <sap2010:ViewStateData Id="Assign_84" sap:VirtualizedContainerService.HintSize="675,60" />
      <sap2010:ViewStateData Id="ExcelWriteRange_3" sap:VirtualizedContainerService.HintSize="675,87" />
      <sap2010:ViewStateData Id="Assign_149" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="ExcelReadRange_14" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="AddToCollection`1_5" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="ForEachRow_11" sap:VirtualizedContainerService.HintSize="314,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_88" sap:VirtualizedContainerService.HintSize="336,374">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_12" sap:VirtualizedContainerService.HintSize="414,483">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_150" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Catch`1_15" sap:VirtualizedContainerService.HintSize="418,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_15" sap:VirtualizedContainerService.HintSize="675,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ReadRange_1" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="CreateFile_1" sap:VirtualizedContainerService.HintSize="314,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AppendLine_1" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AppendLine_2" sap:VirtualizedContainerService.HintSize="330,87" />
      <sap2010:ViewStateData Id="AppendLine_3" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ForEach`1_28" sap:VirtualizedContainerService.HintSize="330,221" />
      <sap2010:ViewStateData Id="AppendLine_4" sap:VirtualizedContainerService.HintSize="330,87" />
      <sap2010:ViewStateData Id="Sequence_89" sap:VirtualizedContainerService.HintSize="314,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AppendLine_5" sap:VirtualizedContainerService.HintSize="330,87" />
      <sap2010:ViewStateData Id="AppendLine_6" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ForEach`1_29" sap:VirtualizedContainerService.HintSize="330,221">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AppendLine_7" sap:VirtualizedContainerService.HintSize="330,87" />
      <sap2010:ViewStateData Id="Sequence_90" sap:VirtualizedContainerService.HintSize="352,599">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_12" sap:VirtualizedContainerService.HintSize="382,747">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_91" sap:VirtualizedContainerService.HintSize="314,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AppendLine_8" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ReadTextFile_1" sap:VirtualizedContainerService.HintSize="314,59">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Delete_1" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_92" sap:VirtualizedContainerService.HintSize="314,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SendOutlookMail_2" sap:VirtualizedContainerService.HintSize="314,145" />
      <sap2010:ViewStateData Id="Sequence_93" sap:VirtualizedContainerService.HintSize="336,360">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SendOutlookMail_4" sap:VirtualizedContainerService.HintSize="314,145" />
      <sap2010:ViewStateData Id="If_32" sap:VirtualizedContainerService.HintSize="675,508" />
      <sap2010:ViewStateData Id="Sequence_56" sap:VirtualizedContainerService.HintSize="697,1965">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_116" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_117" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_118" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="ExcelWriteRange_15" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_76" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_122" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_123" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_124" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="ExcelWriteRange_17" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_78" sap:VirtualizedContainerService.HintSize="336,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_125" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_126" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_127" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="ExcelWriteRange_18" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_79" sap:VirtualizedContainerService.HintSize="336,505">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_128" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_129" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_130" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="ExcelWriteRange_19" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_80" sap:VirtualizedContainerService.HintSize="336,505">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="KillProcess_1" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Assign_131" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_132" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_133" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="ExcelWriteRange_20" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_81" sap:VirtualizedContainerService.HintSize="336,573">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_134" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_135" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_136" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="ExcelWriteRange_21" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_82" sap:VirtualizedContainerService.HintSize="336,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_137" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_138" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_139" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="ExcelWriteRange_22" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_83" sap:VirtualizedContainerService.HintSize="336,508">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Switch`1_7" sap:VirtualizedContainerService.HintSize="476,242">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_12" sap:VirtualizedContainerService.HintSize="701,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_12" sap:VirtualizedContainerService.HintSize="200,51" />
      <sap2010:ViewStateData Id="FlowStep_9">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">100,574.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">100,600 70,600 70,198.25 365,198.25</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="KillProcess_4" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="KillProcess_5" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Assign_140" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="ExcelReadRange_10" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="AddToCollection`1_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="ForEachRow_7" sap:VirtualizedContainerService.HintSize="314,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_84" sap:VirtualizedContainerService.HintSize="336,374">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_8" sap:VirtualizedContainerService.HintSize="414,483">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_145" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Catch`1_13" sap:VirtualizedContainerService.HintSize="418,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_13" sap:VirtualizedContainerService.HintSize="314,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SendOutlookMail_1" sap:VirtualizedContainerService.HintSize="314,145" />
      <sap2010:ViewStateData Id="Assign_141" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_142" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="ExcelWriteRange_23" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_75" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_14">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">580,234.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowSwitch`1_1" sap:VirtualizedContainerService.HintSize="70,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">365,176.5</av:Point>
            <av:Size x:Key="ShapeSize">70,87</av:Size>
            <av:PointCollection x:Key="Default">435,198.25 465,198.25 465,180 583,180</av:PointCollection>
            <av:PointCollection x:Key="(empty)Connector">382.5,263.5 382.5,440 300,440</av:PointCollection>
            <av:PointCollection x:Key="Archivo DescargadoConnector">400,263.5 400,520 300,520</av:PointCollection>
            <av:PointCollection x:Key="Listo para CargaConnector">417.5,263.5 417.5,600 300,600</av:PointCollection>
            <x:String x:Key="DefaultCaseDisplayName">Completado</x:String>
            <av:PointCollection x:Key="ErrorConnector">435,241.75 465,241.75 465,260 580,260</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_12">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">300,104.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">400,155.5 400,176.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_4" sap:VirtualizedContainerService.HintSize="931,686">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">370,0</av:Point>
            <av:Size x:Key="ShapeSize">60,75</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">400,75 400,104.5</av:PointCollection>
            <x:Double x:Key="Width">917</x:Double>
            <x:Double x:Key="Height">649.54</x:Double>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="KillProcess_2" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="KillProcess_3" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Assign_119" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_120" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_121" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="ExcelWriteRange_16" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Assign_146" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="ExcelReadRange_13" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="AddToCollection`1_4" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="ForEachRow_10" sap:VirtualizedContainerService.HintSize="314,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_87" sap:VirtualizedContainerService.HintSize="336,374">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_11" sap:VirtualizedContainerService.HintSize="414,483">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_147" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Catch`1_14" sap:VirtualizedContainerService.HintSize="418,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_14" sap:VirtualizedContainerService.HintSize="314,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SendOutlookMail_5" sap:VirtualizedContainerService.HintSize="314,145" />
      <sap2010:ViewStateData Id="TerminateWorkflow_1" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_77" sap:VirtualizedContainerService.HintSize="336,973">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_6" sap:VirtualizedContainerService.HintSize="400,1042">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_6" sap:VirtualizedContainerService.HintSize="414,1204" />
      <sap2010:ViewStateData Id="FlowStep_3">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">200,127.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_3" sap:VirtualizedContainerService.HintSize="618,636">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
            <av:Size x:Key="ShapeSize">60,75</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,127.5</av:PointCollection>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Double x:Key="Width">604</x:Double>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_5" sap:VirtualizedContainerService.HintSize="632,745">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_31" sap:VirtualizedContainerService.HintSize="654,869">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="P2P_PagoCobranzas_Configs_1" sap:VirtualizedContainerService.HintSize="694,949" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>